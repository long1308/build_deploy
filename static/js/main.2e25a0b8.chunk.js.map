{"version":3,"sources":["views/Home.js","api/face.js","views/ImageInput.js","views/VideoInput.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Link","to","Component","loadModels","_loadModels","apply","this","arguments","_callee","MODEL_URL","regenerator_default","wrap","_context","prev","next","process","faceapi","stop","getFullFaceDescription","_x","_getFullFaceDescription","_callee2","blob","inputSize","OPTION","useTinyModel","img","fullDesc","_args2","_context2","length","undefined","scoreThreshold","sent","withFaceLandmarks","withFaceDescriptors","abrupt","maxDescriptorDistance","createMatcher","_x2","_createMatcher","_callee3","faceProfile","members","labeledDescriptors","faceMatcher","_context3","Object","keys","map","member","name","descriptors","descriptor","Float32Array","JSON_PROFILE","require","INIT_STATE","imageURL","detections","match","hasDetectedFace","ImageInput","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","checkIfFaceDetected","_ref","asyncToGenerator","mark","image","componentWillMount","t0","t1","t2","setState","handleImage","state","_args3","then","fd","detection","findBestMatch","handleFileChange","_ref4","_callee4","event","_context4","resetState","URL","createObjectURL","target","files","loading","objectSpread","_this$state","drawBox","errorMessage","i","_H","box","height","_W","width","_X","_Y","_y","key","style","position","border","borderColor","transform","concat","backgroundColor","marginTop","color","_label","id","type","onChange","accept","src","alt","withRouter","VideoInput","setInputDevice","navigator","mediaDevices","enumerateDevices","_ref2","devices","filter","device","kind","facingMode","exact","startCapture","interval","setInterval","capture","webcam","current","getScreenshot","React","createRef","clearInterval","videoConstraints","camera","className","display","flexDirection","alignItems","react_webcam_default","audio","ref","screenshotFormat","App","Router","history","createHistory","basename","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"8YAGqBA,mLAEjB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,UAAT,gBAEFJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAT,yBATwBC,8DCA3B,SAAeC,IAAtB,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAAZ,EAAAa,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACCL,EAAYM,uBADbH,EAAAE,KAAA,EAECE,IAAkCP,GAFnC,cAAAG,EAAAE,KAAA,EAGCE,IAAkCP,GAHnC,cAAAG,EAAAE,KAAA,EAICE,IAAiCP,GAJlC,wBAAAG,EAAAK,SAAAT,EAAAF,gCAOA,SAAeY,EAAtBC,GAAA,OAAAC,EAAAf,MAAAC,KAAAC,sDAAO,SAAAc,EAAsCC,GAAtC,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArB,UAAA,OAAAG,EAAAZ,EAAAa,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAA4CS,EAA5CK,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAwD,IAExC,GACfJ,EAAS,IAAIR,IAAgC,CACjDO,YACAS,eAHmB,KAKfP,GAAe,EAPhBI,EAAAf,KAAA,EAUWE,IAAmBM,GAV9B,cAUDI,EAVCG,EAAAI,KAAAJ,EAAAf,KAAA,EAcgBE,IACHU,EAAKF,GACpBU,kBAAkBT,GAClBU,sBAjBE,cAcDR,EAdCE,EAAAI,KAAAJ,EAAAO,OAAA,SAkBET,GAlBF,yBAAAE,EAAAZ,SAAAI,EAAAf,gCAqBP,IAAM+B,EAAwB,GACvB,SAAeC,EAAtBC,GAAA,OAAAC,EAAAnC,MAAAC,KAAAC,sDAAO,SAAAkC,EAA6BC,GAA7B,IAAAC,EAAAC,EAAAC,EAAA,OAAAnC,EAAAZ,EAAAa,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAED6B,EAAUI,OAAOC,KAAKN,GACtBE,EAAqBD,EAAQM,IAC/B,SAAAC,GAAM,OACJ,IAAIlC,IACF0B,EAAYQ,GAAQC,KACpBT,EAAYQ,GAAQE,YAAYH,IAC9B,SAAAI,GAAU,OAAI,IAAIC,aAAaD,QAMnCR,EAAc,IAAI7B,IACpB4B,EACAP,GAhBGS,EAAAV,OAAA,SAkBES,GAlBF,wBAAAC,EAAA7B,SAAAwB,EAAAnC,gCCxBP,IAAMiD,EAAeC,EAAQ,IAGvBC,EAAa,CACjBC,SAAU,KACV/B,SAAU,KACVgC,WAAY,KACZP,YAAa,KACbQ,MAAO,KACPC,iBAAiB,GAGbC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAAzC,KAAAwD,IACjBE,EAAAjB,OAAAmB,EAAA,EAAAnB,CAAAzC,KAAAyC,OAAAoB,EAAA,EAAApB,CAAAe,GAAAM,KAAA9D,KAAMyD,KAIRM,oBALmB,eAAAC,EAAAvB,OAAAwB,EAAA,EAAAxB,CAAArC,EAAAZ,EAAA0E,KAKG,SAAAhE,EAAOiE,GAAP,IAAA9C,EAAA,OAAAjB,EAAAZ,EAAAa,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGI,EAAuBuD,GAD1B,cACd9C,EADcf,EAAAqB,KAAArB,EAAAwB,OAAA,WAEXT,GAAYA,EAASG,OAAS,GAFnB,wBAAAlB,EAAAK,SAAAT,EAAAF,SALH,gBAAAa,GAAA,OAAAmD,EAAAjE,MAAAC,KAAAC,YAAA,GAAAyD,EASnBU,mBATmB3B,OAAAwB,EAAA,EAAAxB,CAAArC,EAAAZ,EAAA0E,KASE,SAAAnD,IAAA,OAAAX,EAAAZ,EAAAa,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACbX,IADa,cAAA0B,EAAA8C,GAAAX,EAAAnC,EAAAf,KAAA,EAEgBwB,EAAciB,GAF9B,cAAA1B,EAAA+C,GAAA/C,EAAAI,KAAAJ,EAAAgD,GAAA,CAEHhC,YAFGhB,EAAA+C,IAAA/C,EAAA8C,GAEdG,SAFcV,KAAAvC,EAAA8C,GAAA9C,EAAAgD,IAAAhD,EAAAf,KAAA,GAGbkD,EAAKe,YAAYf,EAAKgB,MAAMtB,UAHf,yBAAA7B,EAAAZ,SAAAI,EAAAf,SATF0D,EAenBe,YAfmBhC,OAAAwB,EAAA,EAAAxB,CAAArC,EAAAZ,EAAA0E,KAeL,SAAA/B,IAAA,IAAAgC,EAAAb,EAAAqB,EAAA1E,UAAA,OAAAG,EAAAZ,EAAAa,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAO2D,EAAPQ,EAAAnD,OAAA,QAAAC,IAAAkD,EAAA,GAAAA,EAAA,GAAejB,EAAKgB,MAAMtB,SAA1BZ,EAAAhC,KAAA,EACNI,EAAuBuD,GAAOS,KAAK,SAACvD,GAClCA,GACJqC,EAAKc,SAAS,CACZnD,WACAgC,WAAYhC,EAASsB,IAAI,SAACkC,GAAD,OAAQA,EAAGC,YACpChC,YAAazB,EAASsB,IAAI,SAACkC,GAAD,OAAQA,EAAG9B,aACrCQ,gBAAiBlC,EAASG,OAAS,MAP7B,WAYNkC,EAAKgB,MAAM5B,cAAiBY,EAAKgB,MAAMnC,YAZjC,CAAAC,EAAAhC,KAAA,eAAAgC,EAAAhC,KAAA,EAaQkD,EAAKgB,MAAM5B,YAAYH,IAAI,SAACI,GAAD,OAC3CW,EAAKgB,MAAMnC,YAAYwC,cAAchC,KAd7B,OAaNO,EAbMd,EAAAb,KAgBV+B,EAAKc,SAAS,CAAElB,UAhBN,wBAAAd,EAAA7B,SAAAwB,EAAAnC,SAfK0D,EAmCnBsB,iBAnCmB,eAAAC,EAAAxC,OAAAwB,EAAA,EAAAxB,CAAArC,EAAAZ,EAAA0E,KAmCA,SAAAgB,EAAOC,GAAP,OAAA/E,EAAAZ,EAAAa,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,cACjBkD,EAAK2B,aADYD,EAAA5E,KAAA,EAEXkD,EAAKc,SAAS,CAClBpB,SAAUkC,IAAIC,gBAAgBJ,EAAMK,OAAOC,MAAM,IACjDC,SAAS,IAJM,OAMjBhC,EAAKe,cANY,wBAAAW,EAAAzE,SAAAuE,EAAAlF,SAnCA,gBAAAiC,GAAA,OAAAgD,EAAAlF,MAAAC,KAAAC,YAAA,GAAAyD,EA4CnB2B,WAAa,WACX3B,EAAKc,SAAL/B,OAAAkD,EAAA,EAAAlD,CAAA,GAAmBU,KA3CnBO,EAAKgB,MAALjC,OAAAkD,EAAA,EAAAlD,CAAA,GAAkBU,EAAlB,CAA8BZ,YAAa,OAF1BmB,wEAgDV,IAAAkC,EACkD5F,KAAK0E,MAAtDtB,EADDwC,EACCxC,SAAUC,EADXuC,EACWvC,WAAYC,EADvBsC,EACuBtC,MAE1BuC,EAAU,KACVC,EAAe,KA6CnB,OAjDOF,EAC8BrC,kBAKnCuC,EACEvG,EAAAC,EAAAC,cAAA,kEAGE4D,IACJwC,EAAUxC,EAAWV,IAAI,SAACmC,EAAWiB,GACnC,IAAIC,EAAKlB,EAAUmB,IAAIC,OACnBC,EAAKrB,EAAUmB,IAAIG,MACnBC,EAAKvB,EAAUmB,IAAIpF,GACnByF,EAAKxB,EAAUmB,IAAIM,GACvB,OACEhH,EAAAC,EAAAC,cAAA,OAAK+G,IAAKT,GACRxG,EAAAC,EAAAC,cAAA,OACEgH,MAAO,CACLC,SAAU,WACVC,OAAQ,QACRC,YAAa,OACbV,OAAQF,EACRI,MAAOD,EACPU,UAAS,aAAAC,OAAeT,EAAf,OAAAS,OAAuBR,EAAvB,SAGRhD,EACD/D,EAAAC,EAAAC,cAAA,KACEgH,MAAO,CACLM,gBAAiB,OACjBJ,OAAQ,QACRC,YAAa,OACbR,MAAOD,EACPa,UAAW,EACXC,MAAO,OACPJ,UAAS,kBAAAC,OAAoBd,EAApB,SAGV1C,EAAMyC,GAAGmB,QAEV,UAQZ3H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACE0H,GAAG,eACHC,KAAK,OACLC,SAAUrH,KAAKgF,iBACfsC,OAAO,sBAERxB,GAGCvG,EAAAC,EAAAC,cAAA,OAAKgH,MAAO,CAAEC,SAAU,aACtBnH,EAAAC,EAAAC,cAAA,OAAKgH,MAAO,CAAEC,SAAU,aACtBnH,EAAAC,EAAAC,cAAA,OAAK8H,IAAKnE,EAAUoE,IAAI,cAEvB3B,GAAoB,cAjHVjG,aAyHV6H,cAAWjE,qBCvIpBP,EAAeC,EAAQ,IAIvBjC,EAAY,IAEZyG,cACJ,SAAAA,EAAYjE,GAAO,IAAAC,EAAA,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAAzC,KAAA0H,IACjBhE,EAAAjB,OAAAmB,EAAA,EAAAnB,CAAAzC,KAAAyC,OAAAoB,EAAA,EAAApB,CAAAiF,GAAA5D,KAAA9D,KAAMyD,KAYRW,mBAbmB3B,OAAAwB,EAAA,EAAAxB,CAAArC,EAAAZ,EAAA0E,KAaE,SAAAhE,IAAA,OAAAE,EAAAZ,EAAAa,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACbX,IADa,cAAAS,EAAA+D,GAAAX,EAAApD,EAAAE,KAAA,EAEgBwB,EAAciB,GAF9B,OAAA3C,EAAAgE,GAAAhE,EAAAqB,KAAArB,EAAAiE,GAAA,CAEHhC,YAFGjC,EAAAgE,IAAAhE,EAAA+D,GAEdG,SAFcV,KAAAxD,EAAA+D,GAAA/D,EAAAiE,IAGnBb,EAAKiE,iBAHc,wBAAArH,EAAAK,SAAAT,EAAAF,SAbF0D,EAmBnBiE,eAAiB,WACfC,UAAUC,aAAaC,mBAAmBlD,KAA1C,eAAAmD,EAAAtF,OAAAwB,EAAA,EAAAxB,CAAArC,EAAAZ,EAAA0E,KAA+C,SAAAnD,EAAMiH,GAAN,OAAA5H,EAAAZ,EAAAa,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACrBwH,EAAQC,OAC9B,SAAAC,GAAM,MAAoB,eAAhBA,EAAOC,OAF0B,YAAA5G,EAAAI,KAI7BH,OAAS,GAJoB,CAAAD,EAAAf,KAAA,eAAAe,EAAAf,KAAA,EAKrCkD,EAAKc,SAAS,CAClB4D,WAAY,SAN6B,OAAA7G,EAAAf,KAAA,uBAAAe,EAAAf,KAAA,GASrCkD,EAAKc,SAAS,CAClB4D,WAAY,CAAEC,MAAO,iBAVoB,QAa7C3E,EAAK4E,eAbwC,yBAAA/G,EAAAZ,SAAAI,EAAAf,SAA/C,gBAAAa,GAAA,OAAAkH,EAAAhI,MAAAC,KAAAC,YAAA,KApBiByD,EAqCnB4E,aAAe,WACb5E,EAAK6E,SAAWC,YAAY,WAC1B9E,EAAK+E,WACJ,OAxCc/E,EA+CnB+E,QA/CmBhG,OAAAwB,EAAA,EAAAxB,CAAArC,EAAAZ,EAAA0E,KA+CT,SAAA/B,IAAA,IAAAmB,EAAA,OAAAlD,EAAAZ,EAAAa,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,WACFkD,EAAKgF,OAAOC,QADV,CAAAnG,EAAAhC,KAAA,eAAAgC,EAAAhC,KAAA,EAEAI,EACJ8C,EAAKgF,OAAOC,QAAQC,gBACpB3H,GACA2D,KAAK,SAAAvD,GACCA,GACJqC,EAAKc,SAAS,CACZnB,WAAYhC,EAASsB,IAAI,SAAAkC,GAAE,OAAIA,EAAGC,YAClChC,YAAazB,EAASsB,IAAI,SAAAkC,GAAE,OAAIA,EAAG9B,iBATnC,WAcAW,EAAKgB,MAAM5B,cAAiBY,EAAKgB,MAAMnC,YAdvC,CAAAC,EAAAhC,KAAA,eAAAgC,EAAAhC,KAAA,EAeckD,EAAKgB,MAAM5B,YAAYH,IAAI,SAAAI,GAAU,OACrDW,EAAKgB,MAAMnC,YAAYwC,cAAchC,KAhBnC,OAeAO,EAfAd,EAAAb,KAkBJ+B,EAAKc,SAAS,CAAElB,UAlBZ,wBAAAd,EAAA7B,SAAAwB,EAAAnC,SA7CR0D,EAAKgF,OAASG,IAAMC,YACpBpF,EAAKgB,MAAQ,CACXrD,SAAU,KACVgC,WAAY,KACZP,YAAa,KACbP,YAAa,KACbe,MAAO,KACP8E,WAAY,MATG1E,sFA4CjBqF,cAAc/I,KAAKuI,2CA0BZ,IAAA3C,EACmC5F,KAAK0E,MAAvCrB,EADDuC,EACCvC,WAAYC,EADbsC,EACatC,MAAO8E,EADpBxC,EACoBwC,WACvBY,EAAmB,KACnBC,EAAS,GACPb,IACJY,EAAmB,CACjB5C,MAjFM,IAkFNF,OAjFO,IAkFPkC,WAAYA,GAGZa,EADiB,SAAfb,EACO,QAEA,QAIb,IAAIvC,EAAU,KAwCd,OAvCMxC,IACJwC,EAAUxC,EAAWV,IAAI,SAACmC,EAAWiB,GACnC,IAAIC,EAAKlB,EAAUmB,IAAIC,OACnBC,EAAKrB,EAAUmB,IAAIG,MACnBC,EAAKvB,EAAUmB,IAAIpF,GACnByF,EAAKxB,EAAUmB,IAAIM,GACvB,OACEhH,EAAAC,EAAAC,cAAA,OAAK+G,IAAKT,GACRxG,EAAAC,EAAAC,cAAA,OACEgH,MAAO,CACLC,SAAU,WACVC,OAAQ,QACRC,YAAa,OACbV,OAAQF,EACRI,MAAOD,EACPU,UAAS,aAAAC,OAAeT,EAAf,OAAAS,OAAuBR,EAAvB,SAGRhD,GAAWA,EAAMyC,GAClBxG,EAAAC,EAAAC,cAAA,KACEgH,MAAO,CACLM,gBAAiB,OACjBJ,OAAQ,QACRC,YAAa,OACbR,MAAOD,EACPa,UAAW,EACXC,MAAO,OACPJ,UAAS,kBAAAC,OAAoBd,EAApB,SAGV1C,EAAMyC,GAAGmB,QAEV,UAQZ3H,EAAAC,EAAAC,cAAA,OACEyJ,UAAU,SACVzC,MAAO,CACL0C,QAAS,OACTC,cAAe,SACfC,WAAY,WAGd9J,EAAAC,EAAAC,cAAA,oBAAYwJ,GACZ1J,EAAAC,EAAAC,cAAA,OACEgH,MAAO,CACLL,MAhJE,IAiJFF,OAhJG,MAmJL3G,EAAAC,EAAAC,cAAA,OAAKgH,MAAO,CAAEC,SAAU,WAAYN,MApJhC,MAqJC4C,EACDzJ,EAAAC,EAAAC,cAAA,OAAKgH,MAAO,CAAEC,SAAU,aACtBnH,EAAAC,EAAAC,cAAC6J,EAAA9J,EAAD,CACE+J,OAAO,EACPnD,MAzJJ,IA0JIF,OAzJH,IA0JGsD,IAAKxJ,KAAK0I,OACVe,iBAAiB,aACjBT,iBAAkBA,KAGpB,KACDnD,GAAoB,eA7JVjG,aAqKV6H,cAAWC,GCxJXgC,mLAdX,OACEnK,EAAAC,EAAAC,cAAA,OAAKyJ,UAAU,OACb3J,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAQC,QAASC,IAAc,CAAEC,SAAUrJ,mBACzClB,EAAAC,EAAAC,cAAA,OAAKyJ,UAAU,SACb3J,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAO1B,OAAK,EAAC2B,KAAK,IAAIC,UAAW3K,IACjCC,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAO1B,OAAK,EAAC2B,KAAK,SAASC,UAAWzG,IACtCjE,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAO1B,OAAK,EAAC2B,KAAK,UAAUC,UAAWvC,cARjC9H,aCGEsK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/G,MACvB,2DCZNgH,IAASC,OAAOhL,EAAAC,EAAAC,cAAC+K,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmB9C,WACrBA,UAAU+C,cAAcC,MAAMhG,KAAK,SAAAiG,GACjCA,EAAaC","file":"static/js/main.2e25a0b8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>BNK48 Facial Recognition App</h2>\r\n        <li>\r\n          <Link to=\"/photo\">Photo Input</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/camera\">Video Camera</Link>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as faceapi from 'face-api.js';\r\n\r\n// Load models and weights\r\nexport async function loadModels() {\r\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\r\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n}\r\n\r\nexport async function getFullFaceDescription(blob, inputSize = 512) {\r\n  // tiny_face_detector options\r\n  let scoreThreshold = 0.5;\r\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\r\n    inputSize,\r\n    scoreThreshold\r\n  });\r\n  const useTinyModel = true;\r\n\r\n  // fetch image to api\r\n  let img = await faceapi.fetchImage(blob);\r\n\r\n  // detect all faces and generate full description from image\r\n  // including landmark and descriptor of each face\r\n  let fullDesc = await faceapi\r\n    .detectAllFaces(img, OPTION)\r\n    .withFaceLandmarks(useTinyModel)\r\n    .withFaceDescriptors();\r\n  return fullDesc;\r\n}\r\n\r\nconst maxDescriptorDistance = 0.5;\r\nexport async function createMatcher(faceProfile) {\r\n  // Create labeled descriptors of member from profile\r\n  let members = Object.keys(faceProfile);\r\n  let labeledDescriptors = members.map(\r\n    member =>\r\n      new faceapi.LabeledFaceDescriptors(\r\n        faceProfile[member].name,\r\n        faceProfile[member].descriptors.map(\r\n          descriptor => new Float32Array(descriptor)\r\n        )\r\n      )\r\n  );\r\n\r\n  // Create face matcher (maximum descriptor distance is 0.5)\r\n  let faceMatcher = new faceapi.FaceMatcher(\r\n    labeledDescriptors,\r\n    maxDescriptorDistance\r\n  );\r\n  return faceMatcher;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loadModels, getFullFaceDescription, createMatcher } from \"../api/face\";\r\n\r\n// Import image to test API\r\n// const testImg = require(\"../img/test.jpg\");\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require(\"../descriptors/bnk48.json\");\r\n\r\n// Initial State\r\nconst INIT_STATE = {\r\n  imageURL: null,\r\n  fullDesc: null,\r\n  detections: null,\r\n  descriptors: null,\r\n  match: null,\r\n  hasDetectedFace: false,\r\n};\r\n\r\nclass ImageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INIT_STATE, faceMatcher: null };\r\n  }\r\n\r\n  checkIfFaceDetected = async (image) => {\r\n    const fullDesc = await getFullFaceDescription(image);\r\n    return !!fullDesc && fullDesc.length > 0; // Trả về true nếu có khuôn mặt được phát hiện, ngược lại trả về false\r\n  };\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) });\r\n    await this.handleImage(this.state.imageURL);\r\n  };\r\n\r\n  handleImage = async (image = this.state.imageURL) => {\r\n    await getFullFaceDescription(image).then((fullDesc) => {\r\n      if (!!fullDesc) {\r\n        this.setState({\r\n          fullDesc,\r\n          detections: fullDesc.map((fd) => fd.detection),\r\n          descriptors: fullDesc.map((fd) => fd.descriptor),\r\n          hasDetectedFace: fullDesc.length > 0,\r\n        });\r\n      }\r\n    });\r\n\r\n    if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n      let match = await this.state.descriptors.map((descriptor) =>\r\n        this.state.faceMatcher.findBestMatch(descriptor)\r\n      );\r\n      this.setState({ match });\r\n    }\r\n  };\r\n\r\n  handleFileChange = async (event) => {\r\n    this.resetState();\r\n    await this.setState({\r\n      imageURL: URL.createObjectURL(event.target.files[0]),\r\n      loading: true,\r\n    });\r\n    this.handleImage();\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({ ...INIT_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { imageURL, detections, match, hasDetectedFace } = this.state;\r\n\r\n    let drawBox = null;\r\n    let errorMessage = null;\r\n    if (!hasDetectedFace) {\r\n      errorMessage = (\r\n        <p>No faces were detected in the image to be reselected</p>\r\n      );\r\n    }\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height;\r\n        let _W = detection.box.width;\r\n        let _X = detection.box._x;\r\n        let _Y = detection.box._y;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                border: \"solid\",\r\n                borderColor: \"blue\",\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`,\r\n              }}\r\n            >\r\n              {!!match ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: \"blue\",\r\n                    border: \"solid\",\r\n                    borderColor: \"blue\",\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: \"#fff\",\r\n                    transform: `translate(-3px,${_H}px)`,\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          id=\"myFileUpload\"\r\n          type=\"file\"\r\n          onChange={this.handleFileChange}\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />\r\n        {errorMessage ? (\r\n          errorMessage\r\n        ) : (\r\n          <div style={{ position: \"relative\" }}>\r\n            <div style={{ position: \"absolute\" }}>\r\n              <img src={imageURL} alt=\"imageURL\" />\r\n            </div>\r\n            {!!drawBox ? drawBox : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ImageInput);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Webcam from 'react-webcam';\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/bnk48.json');\r\n\r\nconst WIDTH = 420;\r\nconst HEIGHT = 420;\r\nconst inputSize = 160;\r\n\r\nclass VideoInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.webcam = React.createRef();\r\n    this.state = {\r\n      fullDesc: null,\r\n      detections: null,\r\n      descriptors: null,\r\n      faceMatcher: null,\r\n      match: null,\r\n      facingMode: null\r\n    };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) });\r\n    this.setInputDevice();\r\n  };\r\n\r\n  setInputDevice = () => {\r\n    navigator.mediaDevices.enumerateDevices().then(async devices => {\r\n      let inputDevice = await devices.filter(\r\n        device => device.kind === 'videoinput'\r\n      );\r\n      if (inputDevice.length < 2) {\r\n        await this.setState({\r\n          facingMode: 'user'\r\n        });\r\n      } else {\r\n        await this.setState({\r\n          facingMode: { exact: 'environment' }\r\n        });\r\n      }\r\n      this.startCapture();\r\n    });\r\n  };\r\n\r\n  startCapture = () => {\r\n    this.interval = setInterval(() => {\r\n      this.capture();\r\n    }, 1500);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  capture = async () => {\r\n    if (!!this.webcam.current) {\r\n      await getFullFaceDescription(\r\n        this.webcam.current.getScreenshot(),\r\n        inputSize\r\n      ).then(fullDesc => {\r\n        if (!!fullDesc) {\r\n          this.setState({\r\n            detections: fullDesc.map(fd => fd.detection),\r\n            descriptors: fullDesc.map(fd => fd.descriptor)\r\n          });\r\n        }\r\n      });\r\n\r\n      if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n        let match = await this.state.descriptors.map(descriptor =>\r\n          this.state.faceMatcher.findBestMatch(descriptor)\r\n        );\r\n        this.setState({ match });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { detections, match, facingMode } = this.state;\r\n    let videoConstraints = null;\r\n    let camera = '';\r\n    if (!!facingMode) {\r\n      videoConstraints = {\r\n        width: WIDTH,\r\n        height: HEIGHT,\r\n        facingMode: facingMode\r\n      };\r\n      if (facingMode === 'user') {\r\n        camera = 'Front';\r\n      } else {\r\n        camera = 'Back';\r\n      }\r\n    }\r\n\r\n    let drawBox = null;\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height;\r\n        let _W = detection.box.width;\r\n        let _X = detection.box._x;\r\n        let _Y = detection.box._y;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"Camera\"\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <p>Camera: {camera}</p>\r\n        <div\r\n          style={{\r\n            width: WIDTH,\r\n            height: HEIGHT\r\n          }}\r\n        >\r\n          <div style={{ position: 'relative', width: WIDTH }}>\r\n            {!!videoConstraints ? (\r\n              <div style={{ position: 'absolute' }}>\r\n                <Webcam\r\n                  audio={false}\r\n                  width={WIDTH}\r\n                  height={HEIGHT}\r\n                  ref={this.webcam}\r\n                  screenshotFormat=\"image/jpeg\"\r\n                  videoConstraints={videoConstraints}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {!!drawBox ? drawBox : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(VideoInput);\r\n","import React, { Component } from 'react';\r\nimport { Route, Router } from 'react-router-dom';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport './App.css';\r\n\r\nimport Home from './views/Home';\r\nimport ImageInput from './views/ImageInput';\r\nimport VideoInput from './views/VideoInput';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router history={createHistory({ basename: process.env.PUBLIC_URL })}>\r\n          <div className=\"route\">\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/photo\" component={ImageInput} />\r\n            <Route exact path=\"/camera\" component={VideoInput} />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}